#!/usr/bin/env bash

#文本描述符及重定向



#文件描述符是与某个打开的文件或数据流相关联的整数。文件描述符0、1、2都是系统预留的。
#0 - stdin(标准输入)
#1 - stdout(标准输出)
#2 - stderr(标准错误)

#什么意思？
#(个人理解)命令执行后都会有一个返回码(0、1、2),根据命令不同的返回码判断命令是否执行成功。
#这个返回码就是文件描述符。





#将输出文本重定向或保存到一个文件中
#这种方法通过截断文件方式，将输出文本存储到指定文件中，也就是说在echo命令输出写入文件之前，temp.txt>中的内容会被清空。
echo "This is a sample text 100" > temp.txt;



#在文本后面追加内容
echo "This is a sample text 200" >> temp2.txt;
echo "This is a sample text 300" >> temp2.txt;





#############################################################



#成功和不成功的命令
#当一个命令发生错误并返回时，返回一个非0的退出状态；
#而当命令完成之后，会返回数字0;

#如果是下面这条命令，会将错误内容打印在控制台上,并且temp3.txt中不会有内容
ls + > temp3.txt;


#将命令执行发生错误的内容重定向到temp4.txt文件中
ls + 2> temp4.txt;




#################################################################

#前期可能有预制条件，命令可能成功、可能失败，将返回不同状态的日志输出到不同日志。
echo "hi" 2>temp5.txt 1>temp6.txt;


#或者可以将stderr和stdout，输出到同一个文件。
ls + &> temp7.txt;

